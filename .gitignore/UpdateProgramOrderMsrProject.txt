//Get details for list of 307 Programs from the Program measures
list<eo3__Component_Program_Attribute__c>lstProgramMsrs = [select id, name, Recipient_Type__c, eo3__Contractor_Incentive__c, eo3__Additional_Incentive__c, eo3__Program__c from eo3__Component_Program_Attribute__c
     where id in (
'a0DE000000CPY6R',
'a0DE000000CPY6S',
'a0DE000000CPY6T',
'a0DE000000CPY6U',
'a0DE000000CPY6V',
'a0DE000000CPY6W',
'a0DE000000CPY6X',
'a0DE000000CPY6Y',
'a0DE000000CPY6Z',
'a0DE000000CPY6a',
'a0DE000000CPY6b',
'a0DE000000CPY6c',
'a0DE000000CPY6d',
'a0DE000000CPY6e',
'a0DE000000CPY6f',
'a0DE000000CPY6g',
'a0DE000000CPY6h',
'a0DE000000CPY6i',
'a0DE000000CPY6j',
'a0DE000000CPY6k',
'a0DE000000CPY6l',
'a0DE000000CPY6m',
'a0DE000000CPY6n',
'a0DE000000CPY6o',
'a0DE000000CPZ7c',
'a0DE000000CPZ7d',
'a0DE000000CPZ7e',
'a0DE000000CPZ7f',
'a0DE000000CPZ7g',
'a0DE000000CPZ7h',
'a0DE000000CPZ7i',
'a0DE000000CPZ7j',
'a0DE000000CPZ7k',
'a0DE000000CPZ7l',
'a0DE000000CPZ7m',
'a0DE000000CPZ7n',
'a0DE000000CPZ7o',
'a0DE000000CPZ7p',
'a0DE000000CPZ7q',
'a0DE000000CPZ7r',
'a0DE000000CPZ7s',
'a0DE000000CPZ7t',
'a0DE000000CPZ7u',
'a0DE000000CPZ7v',
'a0DE000000CPZ7w',
'a0DE000000CPZ7x',
'a0DE000000CPZ7y',
'a0DE000000CPZ7z',
'a0DE000000CPZ80',
'a0DE000000CPZ81',
'a0DE000000CPZ82',
'a0DE000000CPZ83',
'a0DE000000CPZ84',
'a0DE000000CPZ85',
'a0DE000000CPZ86',
'a0DE000000CPZ87',
'a0DE000000CPZ88',
'a0DE000000CPZ89',
'a0DE000000CPZ8A',
'a0DE000000CPZ8B',
'a0DE000000CPZ8C',
'a0DE000000CPZ8D',
'a0DE000000CPZ8E',
'a0DE000000CPZ8F',
'a0DE000000CPZ8G',
'a0DE000000CPZ8H',
'a0DE000000CPZ8I',
'a0DE000000CPZ8J',
'a0DE000000CPZ8K',
'a0DE000000CPZ8L',
'a0DE000000CPZ8M',
'a0DE000000CPZ8N',
'a0DE000000CPZ8O',
'a0DE000000CPZ8P',
'a0DE000000CPZ8Q',
'a0DE000000CPZ8R',
'a0DE000000CPZ8S',
'a0DE000000CPZ8T',
'a0DE000000CPZ8U',
'a0DE000000CPZ8V',
'a0DE000000CPZ8W',
'a0DE000000CPZ8X',
'a0DE000000CPZ8Y',
'a0DE000000CPZ8Z',
'a0DE000000CPZ8a',
'a0DE000000CPZ8b',
'a0DE000000CPZ8c',
'a0DE000000CPZ8d',
'a0DE000000CPZ8e',
'a0DE000000CPZ8f',
'a0DE000000CPZ8g',
'a0DE000000CPZ8h',
'a0DE000000CPZ8i',
'a0DE000000CPZ8j',
'a0DE000000CPZ8k',
'a0DE000000CPZ8l',
'a0DE000000CPZ8m',
'a0DE000000CPZ8n',
'a0DE000000CPZ8o',
'a0DE000000CPZ8p',
'a0DE000000CPZ8q',
'a0DE000000CPZ8r',
'a0DE000000CPZ8s',
'a0DE000000CPZ8t',
'a0DE000000CPZ8u',
'a0DE000000CPZ8v',
'a0DE000000CPZ8w',
'a0DE000000CPZ8x',
'a0DE000000CPZ8y',
'a0DE000000CPZ8z',
'a0DE000000CPZ90',
'a0DE000000CPZ91',
'a0DE000000CPZ92',
'a0DE000000CPZ93',
'a0DE000000CPZ94',
'a0DE000000CPZ95',
'a0DE000000CPZ96',
'a0DE000000CPZ97',
'a0DE000000CPZ98',
'a0DE000000CPZ99',
'a0DE000000CPZ9A',
'a0DE000000CPZ9B',
'a0DE000000CPZ9C',
'a0DE000000CPZ9D',
'a0DE000000CPZ9E',
'a0DE000000CPZ9F',
'a0DE000000CPZ9G',
'a0DE000000CPZ9H',
'a0DE000000CPZ9I',
'a0DE000000CPZ9J',
'a0DE000000CPZ9K',
'a0DE000000CPZ9L',
'a0DE000000CPZ9M',
'a0DE000000CPZ9N',
'a0DE000000CPZ9O',
'a0DE000000CPZ9P',
'a0DE000000CPZ9Q',
'a0DE000000CPZ9R',
'a0DE000000CPZ9S',
'a0DE000000CPZ9T',
'a0DE000000CPZ9U',
'a0DE000000CPZ9V',
'a0DE000000CPZ9W',
'a0DE000000CPZ9X',
'a0DE000000CPZ9Y',
'a0DE000000CPZ9Z',
'a0DE000000CPZ9a',
'a0DE000000CPZ9b',
'a0DE000000CPZ9c',
'a0DE000000CPZ9d',
'a0DE000000CPZ9e',
'a0DE000000CPZ9f',
'a0DE000000CPZ9g',
'a0DE000000CPZ9h',
'a0DE000000CPZ9i',
'a0DE000000CPZ9j',
'a0DE000000CPZ9k',
'a0DE000000CPZ9l',
'a0DE000000CPZ9m',
'a0DE000000CPZ9n',
'a0DE000000CPZ9o',
'a0DE000000CPZ9p',
'a0DE000000CPZ9q',
'a0DE000000CPZ9r',
'a0DE000000CPZ9s',
'a0DE000000CPZ9t',
'a0DE000000CPZ9u',
'a0DE000000CPZ9v',
'a0DE000000CPZ9w',
'a0DE000000CPZ9x',
'a0DE000000CPZ9y',
'a0DE000000CPZ9z',
'a0DE000000CPZA0',
'a0DE000000CPZA1',
'a0DE000000CPZA2',
'a0DE000000CPZA3',
'a0DE000000CPZA4',
'a0DE000000CPZA5',
'a0DE000000CPZA6',
'a0DE000000CPZA7',
'a0DE000000CPZA8',
'a0DE000000CPZA9',
'a0DE000000CPZAA',
'a0DE000000CPZAB',
'a0DE000000CPZAC',
'a0DE000000CPZAD',
'a0DE000000CPZAE',
'a0DE000000CPZAF',
'a0DE000000CPZAG',
'a0DE000000CPZAH',
'a0DE000000CPZAI',
'a0DE000000CPZAJ',
'a0DE000000CPZAK',
'a0DE000000CPZAL',
'a0DE000000CPZAM',
'a0DE000000CPZAN',
'a0DE000000CPZAO',
'a0DE000000CPZAP',
'a0DE000000CPZAQ',
'a0DE000000CPZAR',
'a0DE000000CPZAS',
'a0DE000000CPZAT',
'a0DE000000CPZAU',
'a0DE000000CPZAV',
'a0DE000000CPZAW',
'a0DE000000CPZAX',
'a0DE000000CPZAY',
'a0DE000000CPZAZ',
'a0DE000000CPZAa',
'a0DE000000CPZAb',
'a0DE000000CPZAc',
'a0DE000000CPZAd',
'a0DE000000CPZAe',
'a0DE000000CPZAf',
'a0DE000000CPZAg',
'a0DE000000CPZAh',
'a0DE000000CPZAi',
'a0DE000000CPZAj',
'a0DE000000CPZAk',
'a0DE000000CPZAl',
'a0DE000000CPZAm',
'a0DE000000CPZAn',
'a0DE000000CPZAo',
'a0DE000000CPZAp',
'a0DE000000CPZAq',
'a0DE000000CPZAr',
'a0DE000000CPZAs',
'a0DE000000CPZAt',
'a0DE000000CPZAu',
'a0DE000000CPZAv',
'a0DE000000CPZAw',
'a0DE000000CPZAx',
'a0DE000000CPZAy',
'a0DE000000CPZAz',
'a0DE000000CPZB0',
'a0DE000000CPZB1',
'a0DE000000CPZB2',
'a0DE000000CPZB3',
'a0DE000000CPZB4',
'a0DE000000CPZB5',
'a0DE000000CPZB6',
'a0DE000000CPZB7',
'a0DE000000CPZB8',
'a0DE000000CPZB9',
'a0DE000000CPZBA',
'a0DE000000CPZBB',
'a0DE000000CPZBC',
'a0DE000000CPZBD',
'a0DE000000CPZBE',
'a0DE000000CPZBF',
'a0DE000000CPZBG',
'a0DE000000CPZBH',
'a0DE000000CPZBI',
'a0DE000000CPZBJ',
'a0DE000000CPZBK',
'a0DE000000CPZBL',
'a0DE000000CPZBM',
'a0DE000000CPZBN',
'a0DE000000CPZRS',
'a0DE000000CpvRH',
'a0DE000000CpvRI',
'a0DE000000CPYBr',
'a0DE000000CPYBs',
'a0DE000000CPYBt',
'a0DE000000CPYBu',
'a0DE000000CPYBv',
'a0DE000000CPYBw',
'a0DE000000CPYBx',
'a0DE000000CPYBy',
'a0DE000000CPYBz',
'a0DE000000CPYC0',
'a0DE000000CPYC1',
'a0DE000000CPYC2',
'a0DE000000CPYC3',
'a0DE000000CPYC4',
'a0DE000000CPYC5',
'a0DE000000CPYC6',
'a0DE000000CPYC7',
'a0DE000000CPYC8',
'a0DE000000CPYC9',
'a0DE000000CPYCA',
'a0DE000000CPYCB',
'a0DE000000CPYCC',
'a0DE000000CPYCD',
'a0DE000000CPYCE',
'a0DE000000CPYCF',
'a0DE000000CPYCG',
'a0DE000000CPYCH',
'a0DE000000CPYCI',
'a0DE000000CPYCJ',
'a0DE000000CPYCK',
'a0DE000000CPYCL',
'a0DE000000CPYCM',
'a0DE000000CPYCN',
'a0DE000000CPYCO',
'a0DE000000CPYCP',
'a0DE000000CPYCQ',
'a0DE000000CPYCR',
'a0DE000000CPYCS',
'a0DE000000CPYCT',
'a0DE000000CPYCU',
'a0DE000000CPZNH',
'a0DE000000CPZNI',
'a0DE000000CPZNJ',
'a0DE000000CPZNK',
'a0DE000000CPZNL',
'a0DE000000CPZRc'    
)];
set<string> setProgramID = new set<string>();
set<string> setProgramMsrID = new set<string>();

list<eo3__Component_Program_Attribute__c> lstUpdProgramMsrs = new list<eo3__Component_Program_Attribute__c>();

//load all program ID's into a set and Update Program measures recipient type
for (eo3__Component_Program_Attribute__c programMsrs : lstProgramMsrs) {
    
    if (programMsrs.Recipient_Type__c == 'Contractor') {
        system.debug ('@@__1...Program Measures/Type '+programMsrs.Name+' / '+programMsrs.Recipient_Type__c);  

        setProgramID.add(programMsrs.eo3__Program__c);
        setProgramMsrId.add(programMsrs.ID);
        
        programMsrs.Recipient_Type__c = 'Customer';
        programMsrs.eo3__Additional_Incentive__c = null;
        programMsrs.eo3__Contractor_Incentive__c = null;
        lstUpdProgramMsrs.add(programMsrs);
    }
}
if (!lstUpdProgramMsrs.isEmpty()) {
   // Update(lstUpdProgramMsrs);
}

//Get program orders for that program and update recipient type
list<Program_Order_Number__c> lstProgramOrders = [select id, name, Recipient_Type__c from Program_Order_Number__c where Program__c in :setProgramID];
list<Program_Order_Number__c> lstUpdProgramOrders = new list<Program_Order_Number__c>();

if (!lstProgramOrders.isEmpty()) {
   for (Program_Order_Number__c programOrders : lstProgramOrders ) {
       if (programOrders.Recipient_Type__c == 'Contractor') {
           system.debug ('@@__1...Program Order/Type '+programOrders.Name+' / '+programOrders.Recipient_Type__c);  
           programOrders.Recipient_Type__c = 'Customer';
           lstUpdProgramOrders.add(programOrders);
       }
   }
   if (!lstUpdProgramOrders.isEmpty()) {
    // Update(lstUpdProgramOrders);
   }
}

//Get Project Measures for the program measures and update recipient type if not paid
list<eo3__Custom_Tasks__c> lstProjectMsrs = [select id, name, Recipient_Type__c,eo3__Program_Measure__c from eo3__Custom_Tasks__c where eo3__Program_Measure__c in :setProgramMsrId and project_status__c not in ('Paid', 'Withdrawn')];
list<eo3__Custom_Tasks__c> lstUpdProjectMsrs = new list<eo3__Custom_Tasks__c>();

if (!lstProgramOrders.isEmpty()) {
   for (eo3__Custom_Tasks__c projectMsrs : lstProjectMsrs ) {
       if (projectMsrs.Recipient_Type__c == 'Contractor') {
           system.debug ('@@__1...Project Measure/Type '+projectMsrs.Name+' / '+projectMsrs.Recipient_Type__c); 
           projectMsrs.Recipient_Type__c = 'Customer';
           lstUpdProjectMsrs.add(projectMsrs);
       }
   }
   if (!lstUpdProjectMsrs.isEmpty()) {
    // Update(lstUpdProjectMsrs);
   }
}
